Features of Java 8
Benefits of using streams in java
Could you please explain the performance of parallel stream in java 8
Introduction of defaut methods in java 8
How default changed inheritance in java 8
how do we handle checked exceptions in java 8 and java
Difference between external and internal iteration in java 8

OOPS concept
Composition and Inheritance in java
Dynamic dispatch in java
Polymorphism in java
Instance of operator in java
Purpose of above operator in java
Purpose of clone method in java
Interface relation in java part of solid principle

Data Structures
Self balancing tree
Self balancing binary search tree
How to implement self(strict) balancing binary search tree in java
Have you heard about AVL tree or Red black tree
Purpose of LinkedHashMap in java

Arrays
How to efficiently merge two sorted arrays in java

Coding part
Filter out employees who are younger than 30 and sort remaining employess by there names
and collect sorted employees into a list

Second Interview questions

SQL
What types of constrainsts do you know in mssql?

I have 2 table with same structure city and country 
I want to combine the data using union and union all
Here he gave an example of city and Country table to check union and union all
what is the difference between them?

Difference between where and having in sql?

What is view in relational database?

What type of exceptions do you know?

Below code is correct?
class Parent {
    void methodA() throws IOException {
        System.out.println("Parent:Method A");
    }
}

class Child extends Parent {

    void methodA() throws Exception {
        System.out.println("Parent:Method A");
    }
}

Try with resources?
Main benefit of Try with resources
Is there any requirement for objects to be implemented in try with resources?

How do we create immutable class in java?

class Emp {
 String name;
 List<Emp> name;
}

Java 8
What is functional interface?

Stream API?
Difference between map and flatMap?

Which interfaces in java extends Collection?

Can we store null in hashset?

Implement a Java 8 method to find the number of movies of each director where Movie starts
with letter J

Example of output
Kevin Macdonald=1
Peter Jackson=2
Andy Tennant=1

public class Movie {
	private int id;
	private String title;
	private int year;
	private String imdb;
	private List<Directors> directors;
	
}

public class Director {
	private int id;
	private String name;
	private String imdb;
	

}
